{"version":3,"sources":["Compontents/Home.js","Compontents/About.js","Compontents/Comments.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","About","Comments","useState","setComments","Value","setValue","EditingText","setEditingText","referenc","useRef","scroll","useEffect","axios","get","then","response","data","catch","error","console","log","newInput","id","Date","now","text","current","focus","ref","action","onSubmit","e","preventDefault","method","value","type","placeholder","onChange","target","onClick","edit","map","items","title","comments","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7caf13f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className='container'>\r\n            <h1>Home</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className='container'>\r\n            <h1>About</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useRef,useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport '.././App.css';\r\nexport default function Comments() {\r\n    const [Comments, setComments] = useState([]);\r\n    const [Value, setValue] = useState('');\r\n    const [EditingText, setEditingText] = useState('')\r\n    let referenc = useRef();\r\n    let scroll = useRef();\r\n    \r\n    useEffect(()=>{\r\n        axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\r\n            setComments(response.data)\r\n        },[])\r\n        .catch(error => console.log(error))\r\n    },)\r\n    let newInput = {id:Date.now() , text: Value  }\r\n    function onSubmit(e){\r\n        e.preventDefault()\r\n        setComments([\r\n            ...Comments,\r\n            newInput, \r\n            \r\n        ])\r\n        setValue('');\r\n        setEditingText(Value)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        referenc.current.focus()\r\n    },[])\r\n    function onClick(id){\r\n        let edit =[ ...Comments].map(items =>{\r\n            if(items.title === id){\r\n                items.title = EditingText;\r\n            }\r\n            return items;\r\n            \r\n        } )\r\n        setEditingText(edit)\r\n    }\r\n    return (\r\n        <>\r\n        <div className= 'container comments-Parent'>\r\n            <h1 className='comments-user' >Users Comments</h1>\r\n            <div className='childe-div' ref={scroll}>\r\n            <form action='/submit' className='comments-form' onSubmit={onSubmit} method='post' >\r\n                    <input \r\n                    ref={referenc}\r\n                    value={Value}\r\n                    type='text'  \r\n                    className='comments-input'\r\n                    placeholder=\"Write a comment...\"\r\n                    onChange={e => setValue(e.target.value)}\r\n                    />\r\n                    <button className='comments-btn'>add comments</button>\r\n                    {\r\n                        !!EditingText && <div><input \r\n                        type='text' \r\n                        onChange={e => setEditingText(e.target.value)}\r\n                        value={EditingText}\r\n                        />\r\n                        <button onClick={()=>{\r\n                            onClick(Comments.title)\r\n                        }}>Edit Text</button>\r\n                        </div>\r\n                       \r\n                    }\r\n                     \r\n                </form>\r\n                \r\n                <ul className='Comments'>\r\n                    {\r\n                        Comments.map(comments => (\r\n                            <li key={comments.id} className='comments-li'>\r\n                                <div className=\"comments-title\">\r\n                                    {comments.title}\r\n                                </div>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                \r\n                \r\n           </div>\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React from \"react\";\nimport Home from './Compontents/Home';\nimport About from './Compontents/About';\nimport Comments from './Compontents/Comments';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <div className='app-logo'>\n        <Link to=\"/\">LOGO</Link>\n        </div>\n      <nav className='navbar-header'> \n          <ul className='navbar-ul'>\n            <li className='navbar-li'>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className='navbar-li'>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li className='navbar-li'>\n              <Link to=\"/Comments\">Comments</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/Comments\">\n            <Comments />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}